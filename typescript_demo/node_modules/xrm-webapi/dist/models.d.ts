export declare class WebApiConfig {
    version: string;
    accessToken?: string;
    url?: string;
    /**
     * Constructor
     * @param config WebApiConfig
     */
    constructor(version: string, accessToken?: string, url?: string);
}
export interface WebApiRequestResult {
    error: boolean;
    response: any;
    headers?: any;
}
export interface WebApiRequestConfig {
    method: string;
    contentType: string;
    body?: any;
    queryString: string;
    apiConfig: WebApiConfig;
    queryOptions?: QueryOptions;
}
/**
 * Parse GUID by removing curly braces and converting to uppercase
 * @param id GUID to parse
 */
export declare function parseGuid(id: string): string;
/**
 * Check if two GUIDs are equal
 * @param id1 GUID 1
 * @param id2 GUID 2
 */
export declare function areGuidsEqual(id1: string, id2: string): boolean;
export interface QueryOptions {
    includeFormattedValues?: boolean;
    includeLookupLogicalNames?: boolean;
    includeAssociatedNavigationProperties?: boolean;
    maxPageSize?: number;
    impersonateUserId?: string;
    representation?: boolean;
}
export interface Entity {
    [propName: string]: any;
}
export interface RetrieveMultipleResponse {
    value: Entity[];
    '@odata.nextlink': string;
}
export interface ChangeSet {
    queryString: string;
    entity: object;
    method: string;
}
export interface FunctionInput {
    name: string;
    value: string;
    alias?: string;
}
